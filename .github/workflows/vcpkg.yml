name: Vcpkg CI

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        config: [RelWithDebInfo]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{github.workspace}}/vcpkg
          !${{github.workspace}}/vcpkg/buildtrees
          !${{github.workspace}}/vcpkg/packages
          !${{github.workspace}}/vcpkg/downloads
          ${{ github.workspace }}/build/bin/Db*.solutions
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build autoconf automake autoconf-archive
        cmake --version
        ninja --version
        gcc --version
        g++ --version

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      env:
        VCPKG_PYTHON3: $(which python3)
      run: |
        echo "VCPKG_PYTHON3=$VCPKG_PYTHON3" >> $GITHUB_ENV
        brew update
        brew install cmake ninja autoconf automake autoconf-archive libtool texinfo
        # Ensure autoconf tools are properly linked and in PATH
        brew link --force autoconf automake libtool
        cmake --version
        ninja --version
        clang --version

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2
      
    - name: Set Windows vcpkg triplet
      if: runner.os == 'Windows'
      run: echo "VCPKG_TARGET_TRIPLET_CMAKE_PARAM=-DVCPKG_TARGET_TRIPLET=x64-windows" >> $env:GITHUB_ENV

    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: '6f29f12e82a8293156836ad81cc9bf5af41fe836'
        vcpkgJsonGlob: '**/vcpkg.json'

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G "Ninja Multi-Config" -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_OVERLAY_PORTS=${{github.workspace}}/vcpkg-overlays/ports ${{ env.VCPKG_TARGET_TRIPLET_CMAKE_PARAM }} -DOPENMIND_BUILD_TESTS=ON -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.config }}

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{ matrix.config }} --prefix ${{github.workspace}}/install

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Check
      working-directory: ${{github.workspace}}/build
      run: ctest . -C ${{ matrix.config }} -j ${{steps.cpu-cores.outputs.count}} -E "ts" --rerun-failed --output-on-failure
