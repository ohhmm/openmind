name: C/C++ CI Ubuntu

on: [push]

jobs:
  build-in-ubuntu:
    runs-on: ubuntu-22.04
    env:
      CACHE_KEY: cache-v1

    steps:
    - uses: actions/checkout@v4
    
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build autoconf automake libtool pkg-config python3-dev python3-pip python3-setuptools python3-venv build-essential libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev libffi-dev

    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install vcpkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git clone https://x-access-token:${GITHUB_TOKEN}@github.com/Microsoft/vcpkg.git ${{github.workspace}}/vcpkg
        cd ${{github.workspace}}/vcpkg
        git checkout f176b58f35a75f9f8f54099cd9df97d2e2793a2e
        ./bootstrap-vcpkg.sh

    - name: Set environment variables
      run: |
        echo "VCPKG_ROOT=${{github.workspace}}/vcpkg" >> $GITHUB_ENV
        echo "CMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV
        echo "VCPKG_DEFAULT_TRIPLET=x64-linux" >> $GITHUB_ENV
        echo "VCPKG_INSTALLED_DIR=${{github.workspace}}/vcpkg/installed" >> $GITHUB_ENV

    - name: Install vcpkg dependencies
      working-directory: ${{github.workspace}}/vcpkg
      run: |
        ./vcpkg install --triplet x64-linux

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: |
        cmake ${{github.workspace}} \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_TARGET_TRIPLET=x64-linux \
          -DCMAKE_BUILD_TYPE=Release \
          -DOPENMIND_USE_VCPKG=ON \
          -DOPENMIND_USE_CONAN=OFF \
          -DOPENMIND_BUILD_SAMPLES=OFF \
          -DOPENMIND_BUILD_TESTS=ON \
          -DOPENMIND_MATH_USE_LEVELDB_CACHE=OFF \
          -DOPENMIND_STORAGE_LEVELDB=OFF
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release -j $(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 3200 -C Release -j $(nproc) -E ts
