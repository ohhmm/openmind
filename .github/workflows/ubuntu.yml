name: C/C++ CI

on: [push]

jobs:
  build-in-ubuntu:

    runs-on: ubuntu-22.04

    env:
      BOOST_ROOT: /usr/local/boost_1_85_0

    steps:
    - uses: actions/checkout@v3
    - name: OS prerequisites
      run: |
        sudo apt update &&
        sudo apt install -y libxss-dev libx11-dev libxcb-screensaver0-dev ocl-icd-opencl-dev libopengl-dev freeglut3-dev libleveldb-dev libsnappy-dev libvulkan-dev liblz4-dev libfmt-dev librocksdb-dev libpython3-all-dev libopencl-clang-dev libtbb-dev ninja-build
    - name: Install Boost from source
      run: |
        sudo apt-get install -y wget
        wget -O boost_1_85_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.85.0/source/boost_1_85_0.tar.gz
        tar xzf boost_1_85_0.tar.gz
        cd boost_1_85_0
        ./bootstrap.sh --prefix=/usr/local/boost_1_85_0
        sudo ./b2 install
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Configure
      working-directory: ${{github.workspace}}/build
      run: |
        cmake ${{github.workspace}} -DBOOST_ROOT=/usr/local/boost_1_85_0 -DOPENMIND_BUILD_SAMPLES=OFF -DOPENMIND_BUILD_TESTS=ON -DOPENMIND_USE_OPENCL=OFF -G "Ninja Multi-Config"
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build ${{github.workspace}}/build -j `nproc` --config Release
    - name: Check
      working-directory: ${{github.workspace}}/build
      run: |
        ctest . -j`nproc` -C Release -E "image_codec_test|ts|Polyfit_test" --rerun-failed --output-on-failure
    - name: List Boost installation
      run: |
        ls -l /usr/local/boost_1_85_0/lib/cmake/Boost-1.85.0
