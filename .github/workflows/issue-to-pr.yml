name: Create Devin Session from Issue

on:
  issues:
    types: [opened, labeled]

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  create-devin-session:
    runs-on: ubuntu-latest
    # Run on issues that are either:
    # 1. Newly created by humans
    # 2. Labeled with "devin" after creation
    # 3. Created by automation with "devin" label already applied
    if: >
      (github.event.action == 'opened' && (
        !contains(github.event.issue.user.login, '[bot]') || 
        contains(fromJSON(toJSON(github.event.issue.labels)).*.name, 'devin')
      )) ||
      (github.event.action == 'labeled' && github.event.label.name == 'devin')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get issue content
        id: issue-content
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          
          # Extract workflow run URL if present
          WORKFLOW_URL=$(echo "$ISSUE_BODY" | grep -o 'https://github.com/[^)]*' || echo "")
          
          # Combine title and body into prompt with enhanced context
          PROMPT="Resolve & PR (with link to original issue) fix, autoconfirming your plan, Issue #${{ github.event.issue.number }}: $ISSUE_TITLE

          $ISSUE_BODY
          
          Task: Analyze the workflow failure, identify the root cause, and create a fix. Focus on the specific error in the build logs.
          If this is a Vcpkg CI failure, pay special attention to compiler errors related to 'constexpr' static data member initialization in omnn/rt/antiloop.hpp.
          
          Workflow URL: $WORKFLOW_URL"
          
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check for existing Devin session
        id: check-session
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if issue already has in-progress label or Devin session comment
          LABELS=$(gh issue view "${{ github.event.issue.number }}" --json labels -q '.labels[].name')
          
          # Log the issue details for debugging
          echo "Processing issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
          echo "Issue created by: ${{ github.event.issue.user.login }}"
          echo "Issue labels: $LABELS"
          
          if echo "$LABELS" | grep -q "in-progress"; then
            echo "Issue already has in-progress label, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check comments for existing Devin session
          COMMENTS=$(gh issue view "${{ github.event.issue.number }}" --json comments -q '.comments[].body')
          if echo "$COMMENTS" | grep -q "Created Devin session:"; then
            echo "Issue already has a Devin session comment, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Create Devin Session
        id: devin-session
        if: steps.check-session.outputs.skip != 'true'
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Convert multiline string to JSON-safe format
          ESCAPED_PROMPT=$(echo "${{ steps.issue-content.outputs.prompt }}" | jq -Rs .)
          
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"prompt\": $ESCAPED_PROMPT, \"snapshot_id\": \"snapshot-9dbc293445474e4498a0c5a4fd32e36b\"}" \
            "https://api.devin.ai/v1/sessions")

          # Check for errors in the response
          ERROR_MSG=$(echo "$RESPONSE" | jq -r '.error')
          if [ "$ERROR_MSG" != "null" ]; then
            echo "Error creating Devin session: $ERROR_MSG"
            exit 1
          fi

          SESSION_ID=$(echo "$RESPONSE" | jq -r '.session_id')
          SESSION_URL=$(echo "$RESPONSE" | jq -r '.url')

          if [ -z "$SESSION_ID" ] || [ -z "$SESSION_URL" ]; then
            echo "Error: Devin session details are missing from the response."
            exit 1
          fi

          # Add label to indicate issue is being processed
          gh issue edit "${{ github.event.issue.number }}" --add-label "in-progress"
          
          # Add comment to issue with session link and context
          gh issue comment "${{ github.event.issue.number }}" --body "Created Devin session to analyze and fix this workflow failure: $SESSION_URL
          
          This automated process will:
          1. Analyze the workflow failure logs
          2. Identify the root cause of the failure
          3. Create a fix and submit a PR
          
          The session is using snapshot ID: snapshot-9dbc293445474e4498a0c5a4fd32e36b"
