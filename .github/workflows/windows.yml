name: C/C++ CI MSVC

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Cache Boost dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/build/CMakeFiles
          C:/Boost
          ${{ github.workspace }}/build/bin/Db*.solutions
        key: ${{ runner.os }}-boost-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-boost-
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: 96dbba1e03d1ecc7c7096e97d5a09ff3c58e21df
        vcpkgArguments: '--triplet x64-windows boost-test boost-filesystem boost-system boost-thread boost-program-options boost-serialization boost-chrono boost-date-time boost-iostreams boost-locale leveldb'
        vcpkgTriplet: x64-windows
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        appendedCacheKey: vcpkg-${{ hashFiles('**/vcpkg.json') }}

    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl
        VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        VCPKG_DEFAULT_TRIPLET: x64-windows
      run: |
        cmake ${{github.workspace}} `
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake `
          -DVCPKG_TARGET_TRIPLET=x64-windows `
          -DCMAKE_BUILD_TYPE=Release `
          -DOPENMIND_USE_VCPKG=ON `
          -DOPENMIND_USE_CONAN=OFF `
          -DOPENMIND_BUILD_SAMPLES=OFF `
          -DOPENMIND_BUILD_TESTS=ON `
          -G "Ninja Multi-Config" `
          -DCMAKE_C_COMPILER="cl.exe" `
          -DCMAKE_CXX_COMPILER="cl.exe" `
          -Dleveldb_TAG:STRING="1.23" `
          -DOPENMIND_MATH_USE_LEVELDB_CACHE=NO `
          -DOPENMIND_STORAGE_LEVELDB=NO

    - name: Install prerequisites
      run: cmake --build ${{github.workspace}}/build --target prerequisites --config Release

    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake .

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Build Debug
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Build Release
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "ts"  --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "ts" --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: Install
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target install --config Release
