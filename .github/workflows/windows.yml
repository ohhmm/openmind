name: C/C++ CI

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: 3508985146f1b1d248c67ead13f8f54be5b4f5da
    - name: Install Boost with vcpkg
      run: |
        vcpkg install boost:x64-windows boost-multiprecision:x64-windows
    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl
      run: cmake ${{github.workspace}} -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake -DOPENMIND_USE_VCPKG=ON -DOPENMIND_BUILD_SAMPLES=OFF -DOPENMIND_BUILD_TESTS=ON -G "Ninja Multi-Config" -D CMAKE_C_COMPILER="cl.exe" -D CMAKE_CXX_COMPILER="cl.exe" -DOPENMIND_MATH_USE_LEVELDB_CACHE=OFF -DOPENMIND_STORAGE_LEVELDB=OFF
    - name: Install prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target prerequisites --config Release
    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake . -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/conan_toolchain.cmake
    - name: Install prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target prerequisites --config Release
    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake .
    - name: Build Debug
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --config Debug
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores
    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 240 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "image_codec_test|ts|Polyfit_test" --output-on-failure
            #   --rerun-failed --output-on-failure
    - name: Build Release
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --config Release
    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 240 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "image_codec_test|ts|Polyfit_test"  --output-on-failure
            #   --rerun-failed --output-on-failure
