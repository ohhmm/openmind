name: C/C++ CI MSVC

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Cache Boost dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/build/CMakeFiles
          C:/Boost
          ${{ github.workspace }}/build/bin/Db*.solutions
        key: ${{ runner.os }}-boost-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-boost-
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install Redis Dependencies
      run: |
        vcpkg install hiredis:x64-windows
        choco install memurai-developer.install
        $memuraiPath = "C:\Program Files\Memurai\memurai-developer.exe"
        & $memuraiPath --service-install
        & $memuraiPath --service-start
        Start-Sleep -s 10  # Wait for Memurai service to start
        $retryCount = 0
        do {
          $ping = & "C:\Program Files\Memurai\memurai-cli.exe" ping
          if ($ping -eq "PONG") { break }
          Start-Sleep -s 2
          $retryCount++
        } while ($retryCount -lt 5)
        if ($ping -ne "PONG") {
          Write-Error "Memurai server failed to respond after multiple attempts"
          exit 1
        }

    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl
      run: cmake ${{github.workspace}} -DOPENMIND_USE_VCPKG=NO -DOPENMIND_BUILD_SAMPLES=OFF -DOPENMIND_BUILD_TESTS=ON -G "Ninja Multi-Config" -D CMAKE_C_COMPILER="cl.exe" -D CMAKE_CXX_COMPILER="cl.exe" -Dleveldb_TAG:STRING="1.23" -DOPENMIND_MATH_USE_LEVELDB_CACHE=NO -DOPENMIND_STORAGE_LEVELDB=NO -DOPENMIND_STORAGE_REDIS=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Install prerequisites
      run: cmake --build ${{github.workspace}}/build --target prerequisites --config Release

    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake .

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Build Debug
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Build Release
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 1024 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "ts"  --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "ts" --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: Install
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target install --config Release
