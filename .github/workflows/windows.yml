name: C/C++ CI MSVC

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Install vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        # vcpkg will install packages automatically in manifest mode
    - name: Cache vcpkg dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/vcpkg/installed
          ${{ github.workspace }}/build/vcpkg_installed
          ${{ github.workspace }}/build/CMakeFiles
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl
        VCPKG_ROOT: ${{github.workspace}}/vcpkg
      run: cmake ${{github.workspace}} -DOPENMIND_USE_VCPKG=YES -DOPENMIND_BUILD_SAMPLES=OFF -DOPENMIND_BUILD_TESTS=ON -G "Ninja Multi-Config" -D CMAKE_C_COMPILER="cl.exe" -D CMAKE_CXX_COMPILER="cl.exe" -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DBoost_NO_BOOST_CMAKE=OFF -DCMAKE_PREFIX_PATH=${{github.workspace}}/vcpkg/installed/x64-windows

    - name: Install prerequisites
      run: cmake --build ${{github.workspace}}/build --target prerequisites --config Release

    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}/build
      run: cmake .

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Build Debug
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Build Release
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 1024 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "ts"  --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "ts" --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: Install
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target install --config Release
