name: C/C++ CI

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    env:
      BOOST_ROOT: C:/local/boost_1_85_0

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Install Boost from source
      run: |
        choco install wget
        wget -O boost_1_85_0.zip https://boostorg.jfrog.io/artifactory/main/release/1.85.0/source/boost_1_85_0.zip
        Expand-Archive boost_1_85_0.zip -DestinationPath C:/local
        cd C:/local/boost_1_85_0
        .\bootstrap.bat
        .\b2 headers
        .\b2 --build-type=complete --architecture=x64 --toolset=msvc install
    - name: Configure
      working-directory: ${{github.workspace}}/build
      run: cmake ${{github.workspace}} -DOPENMIND_USE_CONAN=OFF -DOPENMIND_BUILD_SAMPLES=OFF -DOPENMIND_BUILD_TESTS=ON -G "Ninja Multi-Config" -D CMAKE_C_COMPILER="cl.exe" -D CMAKE_CXX_COMPILER="cl.exe" -Dleveldb_TAG:STRING="1.23" -DOPENMIND_MATH_USE_LEVELDB_CACHE=OFF -DOPENMIND_STORAGE_LEVELDB=OFF
    - name: Build Debug
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --config Debug
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores
    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 240 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "image_codec_test|ts|Polyfit_test" --output-on-failure
    - name: Build Release
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --config Release
    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 240 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "image_codec_test|ts|Polyfit_test"  --output-on-failure
    - name: Verify Boost Installation
      run: |
        echo "Verifying Boost installation at ${{env.BOOST_ROOT}}..."
        if (Test-Path "${{env.BOOST_ROOT}}") {
          echo "Boost directory exists. Listing contents:"
          Get-ChildItem -Path "${{env.BOOST_ROOT}}" -Recurse
        } else {
          echo "Boost directory does not exist at ${{env.BOOST_ROOT}}"
          exit 1
        }
