name: C/C++ CI MSVC

on: [push]

jobs:
  build-on-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install vcpkg
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git clone https://x-access-token:${env:GITHUB_TOKEN}@github.com/Microsoft/vcpkg.git ${{ github.workspace }}/vcpkg
        cd ${{ github.workspace }}/vcpkg
        git checkout f176b58f35a75f9f8f54099cd9df97d2e2793a2e
        .\bootstrap-vcpkg.bat
        
    - name: Set environment variables
      shell: pwsh
      run: |
        "VCPKG_ROOT=${{ github.workspace }}/vcpkg" >> $env:GITHUB_ENV
        "CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" >> $env:GITHUB_ENV
        "VCPKG_DEFAULT_TRIPLET=x64-windows" >> $env:GITHUB_ENV
        "VCPKG_INSTALLED_DIR=${{ github.workspace }}/vcpkg/installed" >> $env:GITHUB_ENV
        "VCPKG_FEATURE_FLAGS=versions,manifests" >> $env:GITHUB_ENV

    - name: Install Ninja
      run: choco install ninja

    - name: Install vcpkg dependencies
      shell: pwsh
      working-directory: ${{github.workspace}}/vcpkg
      run: |
        ./vcpkg.exe install --triplet x64-windows

    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl.exe
        CXX: cl.exe
        VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        VCPKG_DEFAULT_TRIPLET: x64-windows
        CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        VCPKG_FEATURE_FLAGS: versions,manifests
      run: |
        cmake ${{github.workspace}} `
          -DCMAKE_TOOLCHAIN_FILE=${{ env.CMAKE_TOOLCHAIN_FILE }} `
          -DVCPKG_TARGET_TRIPLET=x64-windows `
          -DCMAKE_BUILD_TYPE=Release `
          -DOPENMIND_USE_VCPKG=ON `
          -DOPENMIND_USE_CONAN=OFF `
          -DOPENMIND_BUILD_SAMPLES=OFF `
          -DOPENMIND_BUILD_TESTS=ON `
          -G "Ninja" `
          -DCMAKE_C_COMPILER="cl.exe" `
          -DCMAKE_CXX_COMPILER="cl.exe" `
          -DCMAKE_PREFIX_PATH=${{ env.VCPKG_ROOT }}/installed/x64-windows `
          -DVCPKG_INSTALLED_DIR=${{ env.VCPKG_ROOT }}/installed `
          -DOPENMIND_MATH_USE_LEVELDB_CACHE=OFF `
          -DOPENMIND_STORAGE_LEVELDB=OFF

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - name: Build Debug
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Build Release
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: make check Release
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Release -j ${{steps.cpu-cores.outputs.count}}  -E "ts"  --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: make check Debug
      working-directory: ${{github.workspace}}/build
      run: ctest --timeout 2048 -C Debug -j ${{steps.cpu-cores.outputs.count}}  -E "ts" --output-on-failure
            #   --rerun-failed --output-on-failure

    - name: Install
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target install --config Release
