name: C/C++ CI Conan

on: [push]

jobs:
  build-on-windows:
    runs-on: windows-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Cache Boost dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/build/conan
          ${{ github.workspace }}/build/CMakeFiles
          C:/Boost
        key: ${{ runner.os }}-boost-${{ hashFiles('**/conanfile.txt') }}
        restore-keys: |
          ${{ runner.os }}-boost-
    - name: Create Build Dir
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Use Conan
      run: |
          pip install conan && conan profile detect

          echo "[requires]" > ${{github.workspace}}/conanfile.txt
          echo boost/1.86.0 >> ${{github.workspace}}/conanfile.txt
          echo leveldb/1.23 >> ${{github.workspace}}/conanfile.txt
          echo hiredis/1.0.2 >> ${{github.workspace}}/conanfile.txt

          echo "[generators]" >> ${{github.workspace}}/conanfile.txt
          echo CMakeDeps >> ${{github.workspace}}/conanfile.txt
          echo CMakeToolchain >> ${{github.workspace}}/conanfile.txt

    - name: Verify Redis Service
      timeout-minutes: 2
      run: |
        $maxAttempts = 20
        $attempt = 1
        do {
          Write-Host "Attempt $attempt/$maxAttempts: Checking Redis..."
          try {
            $result = redis-cli -h 127.0.0.1 ping
            if ($result -eq 'PONG') {
              Write-Host "Redis responded successfully with PONG"
              break
            }
            Write-Host "Redis responded but unexpected result: $result"
          } catch {
            Write-Host "Redis check failed: $_"
            if ($attempt % 5 -eq 0) {
              Write-Host "Checking Redis server status..."
              redis-cli -h 127.0.0.1 info server
              netstat -an | findstr "6379"
            }
          }
          Start-Sleep -Seconds 2
          $attempt++
        } while ($attempt -lt $maxAttempts)

        if ($attempt -ge $maxAttempts) {
          Write-Error "Redis failed to start after $maxAttempts attempts"
          redis-cli -h 127.0.0.1 info server
          exit 1
        }
        Write-Host "Redis is ready"
        redis-cli -h 127.0.0.1 info server

    - name: Configure
      working-directory: ${{github.workspace}}/build
      env:
        CC: cl
        OPENMIND_TEST_REDIS_HOST: "127.0.0.1"
        OPENMIND_TEST_REDIS_PORT: 6379
        OPENMIND_TEST_REDIS_RETRY_COUNT: 3
        OPENMIND_TEST_REDIS_RETRY_DELAY: 500
      run: cmake ${{github.workspace}} -DOPENMIND_USE_CONAN=ON -DOPENMIND_USE_VCPKG=NO -DOPENMIND_BUILD_SAMPLES=NO -DOPENMIND_BUILD_TESTS=ON -D CMAKE_C_COMPILER="cl.exe" -D CMAKE_CXX_COMPILER="cl.exe" -DOPENMIND_MATH_USE_LEVELDB_CACHE=NO -DOPENMIND_STORAGE_LEVELDB=NO -DOPENMIND_STORAGE_REDIS=ON
    - name: Install prerequisites with conan
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target Install__Conan --config Release
    - name: Reconfigure to detect newly installed prerequisites
      working-directory: ${{github.workspace}}
      run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/build --preset conan-default
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build .
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores
    - name: check
      working-directory: ${{github.workspace}}/build
      env:
        OPENMIND_TEST_REDIS_HOST: "127.0.0.1"
        OPENMIND_TEST_REDIS_PORT: 6379
        OPENMIND_TEST_REDIS_RETRY_COUNT: 3
        OPENMIND_TEST_REDIS_RETRY_DELAY: 500
      run: ctest . --timeout 2400 -C Debug -j ${{steps.cpu-cores.outputs.count}} -E "ts" --output-on-failure --rerun-failed
