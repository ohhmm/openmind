
macro(platform_specific_iteration)
    IF(IS_DIRECTORY ${ARGN}
		AND ((ARGN STREQUAL windows AND NOT WIN32)
			OR (ARGN STREQUAL apple AND NOT APPLE)
			OR (ARGN STREQUAL linux AND (WIN32 OR APPLE)))
	)
		CONTINUE()
	ENDIF()
endmacro(platform_specific_iteration)

macro(fold)
    get_filename_component(this_project ${CMAKE_CURRENT_SOURCE_DIR} NAME)
    project(${this_project})
    message("\nCreating Project: ${this_project}")
    string(STRIP "${ARGN}" first)
    file(GLOB items *)
    if(first)
        message("Folding ${CMAKE_CURRENT_SOURCE_DIR} (${first} first)")
    else(first)
        message("Folding ${CMAKE_CURRENT_SOURCE_DIR}")
    endif(first)
    foreach(name ${first})
		platform_specific_iteration(name)
        set(item ${CMAKE_CURRENT_SOURCE_DIR}/${name})
        IF(IS_DIRECTORY ${item} AND EXISTS ${item}/CMakeLists.txt)
			message("${item} is dir with CMakeLists.txt")
			add_subdirectory(${item})
			list(REMOVE_ITEM items ${item})
        endif()
    endforeach()

    foreach(item ${items})
        IF(IS_DIRECTORY ${item} AND EXISTS ${item}/CMakeLists.txt)
			get_filename_component(name ${item} NAME)
			platform_specific_iteration(${name})
			IF(NOT ${name} STREQUAL tests)
	            message("${item} is dir with CMakeLists.txt")
    	        get_filename_component(name ${item} NAME)
        	    add_subdirectory(${item})
			endif()
		endif()
    endforeach()
endmacro()
